name: Build GithubNote.NET

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    env:
      Solution_Name: GithubNote.NET.sln
      Test_Project_Path: Tests.UI/Tests.UI.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: nuget restore ${{ env.Solution_Name }}

    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    - name: Test
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.configuration }}
        path: TestResults
        if-no-files-found: error

    - name: Publish
      if: matrix.configuration == 'Release'
      run: |
        dotnet publish ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-build --output publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: matrix.configuration == 'Release'
      with:
        name: GithubNote.NET-${{ matrix.os }}
        path: publish
        if-no-files-found: error

  create-release:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: GithubNote.NET-windows-latest
        path: release-artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release for commit ${{ github.sha }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: ${{ github.ref != 'refs/heads/main' }}
        files: release-artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
